@model IndexViewModel;

<div class="container">
    <div class=" mb-3 mt-3">
        Отправка команды на терминал
    </div>
    
    <div class="form">
        <div class="row">
            <div class="col-6">
                <label for="terminalId" class="form-label">ID Терминала(ов)</label>
                <textarea id="terminalId" class="form-control"></textarea>
            </div>
        
            <div class="col-6">
                <label for="command" class="form-label">Комманда</label>
                <select id="command" class="form-select"></select>
            </div>    
        </div>

        <div class="mt-3 parameters-container"></div>
        
        <div class="d-flex mt-5 justify-content-md-center">
            <button class="btn d-block btn-success">Отправить</button>
        </div>
    </div>
</div>

<div id="commandTypes" class="d-none">
    @Json.Serialize(Model.CommandTypes)
</div>

<script>
    const commands = JSON.parse(document.getElementById('commandTypes').textContent);
    const commandSelectBox = document.getElementById('command');
    const commandParameters = document.querySelector('.parameters-container');

    populateCommandSelectBox();
    updateParameters();
    
    commandSelectBox.addEventListener('change', updateParameters)

    function populateCommandSelectBox() {
        for (let command of commands) {
            let option = document.createElement('option');
            option.text = command.name;
            option.value = command.id;
            commandSelectBox.appendChild(option);
        }        
    }

    function updateParameters(){
        commandParameters.innerHTML = '';

        const command = commands.find(x => x.id == commandSelectBox.value);

        for (let parameter of command.parameters) {
            const container = document.createElement('div');
            container.classList = 'mb-3';
            
            const input = document.createElement('input');
            input.value = parameter.defaultValue;
            input.classList = 'form-control';
            
            const label = document.createElement('label');
            label.textContent = parameter.name;
            label.classList = 'form-label';
            
            container.appendChild(label);
            container.appendChild(input);
            
            commandParameters.appendChild(container);
        }
    }
</script>